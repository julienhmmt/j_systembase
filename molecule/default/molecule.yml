---
# file: molecule/default/molecule.yml

dependency:
  name: galaxy

driver:
  name: docker

platforms:
  - name: molecule-debian11
    image: "geerlingguy/docker-debian11-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
  - name: molecule-debian12
    image: "geerlingguy/docker-debian12-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
  - name: molecule-ubuntu
    image: "geerlingguy/docker-ubuntu2204-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true

provisioner:
  name: ansible
  config_options:
    defaults:
      interpreter_python: auto_silent
      callback_whitelist: profile_tasks, timer, yaml
    ssh_connection:
      pipelining: false
  inventory:
    host_vars:
      molecule-debian11:
        ansible_fqdn: "molecule-debian11.lab.local"
        inventory_hostname: "molecule-debian11"
        systembase_username: "molecule"
      molecule-debian12:
        ansible_fqdn: "molecule-debian12.lab.local"
        inventory_hostname: "molecule-debian12"
        systembase_username: "molecule"
      molecule-ubuntu:
        ansible_fqdn: "molecule-ubuntu.lab.local"
        inventory_hostname: "molecule-ubuntu"
        systembase_username: "molecule"

scenario:
  name: default
  test_sequence:
    - dependency
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy
